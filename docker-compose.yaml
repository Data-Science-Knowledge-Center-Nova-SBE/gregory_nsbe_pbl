################################################################################
# Node-RED Stack or Compose
################################################################################
# docker stack deploy node-red --compose-file docker-compose-node-red.yml
# docker-compose -f docker-compose-node-red.yml -p myNoderedProject up
################################################################################
version: "3.7"

services:
  node-red:
    # build: .
    image: amaralbruno/gregory:latest
    restart: always
    container_name: node-red 
    environment:
      - TZ=Europe/Lisbon
    ports:
      - "1880:1880"
    networks:
      - traefik_proxy
    volumes:
      - flows:/data
      - python:/python-ml
    # The labels below are used to configure Traefik. Traefik is a reverse proxy and more information can be found here: https://traefik.io/
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nodered.tls=true"
      - "traefik.http.routers.nodered.tls.certResolver=default"
      - "traefik.http.services.nodered.loadbalancer.server.port=1880"
      - "traefik.http.routers.nodered.rule=Host(`${DOMAIN_NAME}`)&&PathPrefix(`/nodered/`)"
      # - "traefik.http.routers.nodered.rule=Host(`gregory.${DOMAIN_NAME}`)"

  db:
    image: postgres
    restart: always
    container_name: db
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - 5432:5432
    volumes:
      - ./db-data:/var/lib/postgresql/data
    networks:
      - traefik_proxy
  admin:
    container_name: admin
    build: 
      context: django/
      dockerfile: /Users/brunoamaral/Labs/gregory/Dockerfile.django
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - ./django:/code
    ports:
      - "8000:8000"
    environment:
      - POSTGRES_NAME=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    depends_on:
      - db

volumes:
  flows:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: '${GREGORY_DIR}docker-data'
  python:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: '${GREGORY_DIR}python-ml'

networks:
  traefik_proxy:
    external: false
    name: traefik_proxy
  default:
    driver: bridge
